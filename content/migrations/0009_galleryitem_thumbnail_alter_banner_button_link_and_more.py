# Generated by Django 5.2.6 on 2025-09-13 08:46

import content.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("content", "0008_alter_banner_image"),
    ]

    operations = [
        migrations.AddField(
            model_name="galleryitem",
            name="thumbnail",
            field=models.ImageField(
                blank=True,
                help_text="Optional custom thumbnail for grids (e.g., 600×400). If empty, a YouTube thumbnail or the main image is used.",
                upload_to="gallery/thumbs/",
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="button_link",
            field=models.CharField(
                blank=True,
                help_text="Internal path or full URL (e.g. /admission or https://example.com).",
                max_length=300,
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="button_text",
            field=models.CharField(
                blank=True,
                help_text="Optional CTA text (e.g. ‘Apply now’).",
                max_length=40,
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="image",
            field=models.ImageField(
                blank=True,
                help_text="Preferred ~1920×600 JPG/PNG. Ignored if Image URL is set.",
                null=True,
                upload_to=content.models.banner_upload_to,
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="External image URL (used if no uploaded image or if set).",
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Uncheck to hide this banner."
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="order",
            field=models.PositiveIntegerField(
                default=0, help_text="Lower numbers appear first."
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="subtitle",
            field=models.CharField(
                blank=True,
                help_text="Optional sub-headline under the title.",
                max_length=300,
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="title",
            field=models.CharField(
                help_text="Main headline shown on the banner.", max_length=150
            ),
        ),
        migrations.AlterField(
            model_name="galleryitem",
            name="image",
            field=models.ImageField(
                blank=True,
                help_text="Upload if Kind=Image. Recommended ~1600px on the long side.",
                upload_to="gallery/",
            ),
        ),
        migrations.AlterField(
            model_name="galleryitem",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Uncheck to hide this item."
            ),
        ),
        migrations.AlterField(
            model_name="galleryitem",
            name="kind",
            field=models.CharField(
                choices=[("image", "Image"), ("video", "YouTube (embed)")],
                default="image",
                help_text="Choose ‘Image’ to upload a photo or ‘YouTube (embed)’ for a video.",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="galleryitem",
            name="order",
            field=models.PositiveIntegerField(
                default=0, help_text="Lower numbers appear first."
            ),
        ),
        migrations.AlterField(
            model_name="galleryitem",
            name="place",
            field=models.CharField(
                blank=True,
                help_text="Optional location (e.g., ‘Main Hall’).",
                max_length=120,
            ),
        ),
        migrations.AlterField(
            model_name="galleryitem",
            name="taken_at",
            field=models.DateTimeField(
                blank=True,
                help_text="When the photo/video was taken. Format: YYYY-MM-DD HH:MM (24-hour).",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="galleryitem",
            name="title",
            field=models.CharField(
                help_text="Display title for this item.", max_length=200
            ),
        ),
        migrations.AlterField(
            model_name="galleryitem",
            name="youtube_embed_url",
            field=models.URLField(
                blank=True,
                help_text="For Kind=YouTube. You can paste either an embed URL or a watch URL (e.g., https://www.youtube.com/embed/ScMzIvxBSi4 or https://www.youtube.com/watch?v=ScMzIvxBSi4).",
            ),
        ),
        migrations.AlterField(
            model_name="notice",
            name="image",
            field=models.ImageField(
                blank=True,
                help_text="Optional image for the notice card.",
                null=True,
                upload_to=content.models.notice_upload_to,
            ),
        ),
        migrations.AlterField(
            model_name="notice",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="Optional external image URL (used if no uploaded image).",
            ),
        ),
        migrations.AlterField(
            model_name="notice",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Uncheck to hide this notice."
            ),
        ),
        migrations.AlterField(
            model_name="notice",
            name="link_url",
            field=models.URLField(
                blank=True,
                help_text="Optional ‘Read more’ target; if empty, the internal detail page is used.",
            ),
        ),
        migrations.AlterField(
            model_name="notice",
            name="published_at",
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                help_text="Publish date/time (controls ordering). Format: YYYY-MM-DD HH:MM (24-hour).",
            ),
        ),
        migrations.AlterField(
            model_name="notice",
            name="subtitle",
            field=models.TextField(
                blank=True,
                help_text="Optional short description shown under the title.",
            ),
        ),
        migrations.AlterField(
            model_name="notice",
            name="title",
            field=models.CharField(
                help_text="Notice title shown on the card.", max_length=200
            ),
        ),
        migrations.AlterField(
            model_name="timelineevent",
            name="date",
            field=models.DateField(help_text="Event date (YYYY-MM-DD)."),
        ),
        migrations.AlterField(
            model_name="timelineevent",
            name="description",
            field=models.TextField(
                blank=True, help_text="Optional short description under the title."
            ),
        ),
        migrations.AlterField(
            model_name="timelineevent",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Uncheck to hide this event."
            ),
        ),
        migrations.AlterField(
            model_name="timelineevent",
            name="order",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Secondary sort within the same date. Lower appears first.",
            ),
        ),
        migrations.AlterField(
            model_name="timelineevent",
            name="title",
            field=models.CharField(
                help_text="Event title (shown on the timeline).", max_length=150
            ),
        ),
    ]
